{"name": "验证码测试：正确11位手机号", "status": "broken", "statusDetails": {"message": "TypeError: argument of type 'NoneType' is not iterable", "trace": "self = <test_send_code.TestSendVerificationCode object at 0x000001E91C9EE690>\nreq_session = <requests.sessions.Session object at 0x000001E91FB8BA90>, phone = '13350180921', expect_success = True\nexpect_msg = None, scene_desc = '正确11位手机号'\n\n    @allure.story(\"验证码发送场景（参数化批量测试）\")\n    @allure.title(\"验证码测试：{scene_desc}\")  # 标题带场景描述，报告更清晰\n    # 参数化装饰器：把 send_code_param_data 数据批量传入测试用例\n    @pytest.mark.parametrize(\"phone, expect_success, expect_msg, scene_desc\", send_code_param_data)\n    def test_send_code_parametrize(self, req_session, phone, expect_success, expect_msg, scene_desc):\n        \"\"\"参数化测试：批量覆盖验证码发送的正常/异常场景\"\"\"\n        # 1. 接口信息\n        send_url = f\"{BASE_URL}{SEND_CODE_URL}\"\n        payload = {\"phone\": phone}\n    \n        # 2. 发送请求（使用 Fixture 的会话对象）\n        with allure.step(f\"发送POST请求：手机号={phone}\"):\n            response = req_session.post(url=send_url, json=payload)\n            print(f\"\\n【{scene_desc}】响应内容: {response.text}\")\n    \n        # 3. 断言（分步骤验证，失败时定位更精准）\n        with allure.step(\"验证HTTP状态码为200\"):\n            assert response.status_code == 200, f\"状态码异常：预期200，实际{response.status_code}\"\n    \n        response_json = response.json()\n        with allure.step(f\"验证success标识：预期{expect_success}\"):\n            assert response_json.get(\"success\") is expect_success, \\\n                f\"success异常：预期{expect_success}，实际{response_json.get('success')}\"\n    \n        with allure.step(f\"验证提示信息：包含「{expect_msg}」\"):\n            actual_msg = response_json.get(\"message\", \"\")  # 兼容message字段不存在的情况\n>           assert expect_msg in actual_msg, \\\n                f\"提示信息异常：预期包含「{expect_msg}」，实际「{actual_msg}」\"\nE           TypeError: argument of type 'NoneType' is not iterable\n\ntest_send_code.py:108: TypeError"}, "description": "参数化测试：批量覆盖验证码发送的正常/异常场景", "steps": [{"name": "发送POST请求：手机号=13350180921", "status": "passed", "start": 1757472938858, "stop": 1757472938882}, {"name": "验证HTTP状态码为200", "status": "passed", "start": 1757472938882, "stop": 1757472938882}, {"name": "验证success标识：预期True", "status": "passed", "start": 1757472938882, "stop": 1757472938882}, {"name": "验证提示信息：包含「None」", "status": "broken", "statusDetails": {"message": "TypeError: argument of type 'NoneType' is not iterable\n", "trace": "  File \"C:\\Users\\33042\\Desktop\\api_test_project\\test_send_code.py\", line 108, in test_send_code_parametrize\n    assert expect_msg in actual_msg, \\\n"}, "start": 1757472938882, "stop": 1757472938882}], "attachments": [{"name": "stdout", "source": "acbaa400-2c86-489b-b3bd-280a48309792-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "phone", "value": "'13350180921'"}, {"name": "expect_success", "value": "True"}, {"name": "expect_msg", "value": "None"}, {"name": "scene_desc", "value": "'正确11位手机号'"}], "start": 1757472938858, "stop": 1757472938884, "uuid": "0baa1340-e57b-4fef-bf37-3680fdf23886", "historyId": "adea64fc4f1c832db50f4ef878089106", "testCaseId": "0af75163c8f6887e15f07936507211e4", "fullName": "test_send_code.TestSendVerificationCode#test_send_code_parametrize", "labels": [{"name": "story", "value": "验证码发送场景（参数化批量测试）"}, {"name": "feature", "value": "1. 验证码发送接口"}, {"name": "suite", "value": "test_send_code"}, {"name": "subSuite", "value": "TestSendVerificationCode"}, {"name": "host", "value": "2001TXY-HP"}, {"name": "thread", "value": "35256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_send_code"}], "titlePath": ["test_send_code.py", "TestSendVerificationCode"]}