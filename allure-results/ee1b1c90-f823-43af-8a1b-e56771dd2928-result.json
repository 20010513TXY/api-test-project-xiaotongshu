{"name": "笔记查询测试：有效Token+笔记ID为字符串（格式错）", "status": "failed", "statusDetails": {"message": "AssertionError: 提示信息异常：预期包含「ID格式错误」，实际「出错啦，后台小哥正在努力修复中...」\nassert 'ID格式错误' in '出错啦，后台小哥正在努力修复中...'", "trace": "self = <test_send_code.TestNoteDetail object at 0x000001E91FB89A90>\nreq_session = <requests.sessions.Session object at 0x000001E91FC43A50>\nget_login_token = 'gZRxuOuEiLQOcG1VZadLJrn5vhPwyGk08u7pJMJdOs4Ns4tEUFtKdCPEFB4GnjEkjSoOdxSo0LjU1NuYJNHlfAaFXlIFTAnwBm9DgGkWjZwINIMWpnZa2MjOXprbhrhT'\ntoken_type = 'valid_token', note_id = 'abc123', expect_success = False, expect_msg = 'ID格式错误'\nscene_desc = '有效Token+笔记ID为字符串（格式错）'\n\n    @allure.story(\"笔记查询场景（参数化批量测试：正常+失败）\")\n    @allure.title(\"笔记查询测试：{scene_desc}\")\n    @pytest.mark.parametrize(\"token_type, note_id, expect_success, expect_msg, scene_desc\", note_detail_param_data)\n    def test_note_detail_parametrize(\n            self, req_session, get_login_token, token_type, note_id, expect_success, expect_msg, scene_desc\n    ):\n        \"\"\"\n        参数化测试：覆盖笔记查询的正常场景+4种失败场景\n        依赖 get_login_token Fixture：直接使用有效Token，无需重复登录\n        \"\"\"\n        # 1. 处理Token（区分“有效/无效/空”场景）\n        if token_type == \"valid_token\":\n            token = \"Bearer \" + get_login_token  # 使用Fixture的有效Token\n        elif token_type == \"invalid_token\":\n            token = \"Bearer fake_token_123456\"  # 伪造无效Token\n        else:  # token_type == \"\"\n            token = \"Bearer \"  # Token为空\n    \n        # 2. 接口信息（请求头+参数）\n        note_url = f\"{BASE_URL}{NOTE_DETAIL_URL}\"\n        headers = {\n            \"Authorization\": token,  # 携带Token（有效/无效/空）\n            \"Content-Type\": \"application/json\"\n        }\n        note_payload = {\"id\": note_id}\n    \n        # 3. 发送请求\n        with allure.step(f\"发送笔记查询请求：{scene_desc}\"):\n            response = req_session.post(url=note_url, json=note_payload, headers=headers)\n            print(f\"\\n【{scene_desc}】笔记响应: {response.text}\")\n    \n        # 4. 断言\n        with allure.step(\"验证HTTP状态码为200\"):\n            assert response.status_code == 200, f\"笔记请求异常：状态码{response.status_code}\"\n    \n        note_result = response.json()\n        with allure.step(f\"验证success标识：预期{expect_success}\"):\n            assert note_result.get(\"success\") is expect_success, \\\n                f\"笔记查询结果异常：预期{expect_success}，实际{note_result.get('success')}\"\n    \n        with allure.step(f\"验证提示信息：包含「{expect_msg}」\"):\n            actual_msg = note_result.get(\"message\", \"\")\n>           assert expect_msg in actual_msg, \\\n                f\"提示信息异常：预期包含「{expect_msg}」，实际「{actual_msg}」\"\nE           AssertionError: 提示信息异常：预期包含「ID格式错误」，实际「出错啦，后台小哥正在努力修复中...」\nE           assert 'ID格式错误' in '出错啦，后台小哥正在努力修复中...'\n\ntest_send_code.py:218: AssertionError"}, "description": "\n        参数化测试：覆盖笔记查询的正常场景+4种失败场景\n        依赖 get_login_token Fixture：直接使用有效Token，无需重复登录\n        ", "steps": [{"name": "发送笔记查询请求：有效Token+笔记ID为字符串（格式错）", "status": "passed", "start": 1757472941361, "stop": 1757472941398}, {"name": "验证HTTP状态码为200", "status": "passed", "start": 1757472941398, "stop": 1757472941398}, {"name": "验证success标识：预期False", "status": "passed", "start": 1757472941398, "stop": 1757472941398}, {"name": "验证提示信息：包含「ID格式错误」", "status": "failed", "statusDetails": {"message": "AssertionError: 提示信息异常：预期包含「ID格式错误」，实际「出错啦，后台小哥正在努力修复中...」\nassert 'ID格式错误' in '出错啦，后台小哥正在努力修复中...'\n", "trace": "  File \"C:\\Users\\33042\\Desktop\\api_test_project\\test_send_code.py\", line 218, in test_note_detail_parametrize\n    assert expect_msg in actual_msg, \\\n"}, "start": 1757472941398, "stop": 1757472941398}], "attachments": [{"name": "stdout", "source": "6806bf31-395f-42fe-82b2-7456ab0dcd75-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "token_type", "value": "'valid_token'"}, {"name": "note_id", "value": "'abc123'"}, {"name": "expect_success", "value": "False"}, {"name": "expect_msg", "value": "'ID格式错误'"}, {"name": "scene_desc", "value": "'有效Token+笔记ID为字符串（格式错）'"}], "start": 1757472941361, "stop": 1757472941398, "uuid": "e95ccba6-6761-4f4e-bfdf-3c7a8938f9e1", "historyId": "9cf624319f8da6788e751a129c3a5f67", "testCaseId": "fd2a8959df1d9b091186df995fa0290d", "fullName": "test_send_code.TestNoteDetail#test_note_detail_parametrize", "labels": [{"name": "story", "value": "笔记查询场景（参数化批量测试：正常+失败）"}, {"name": "feature", "value": "3. 笔记详情查询接口"}, {"name": "suite", "value": "test_send_code"}, {"name": "subSuite", "value": "TestNoteDetail"}, {"name": "host", "value": "2001TXY-HP"}, {"name": "thread", "value": "35256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_send_code"}], "titlePath": ["test_send_code.py", "TestNoteDetail"]}